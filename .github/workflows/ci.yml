name: CI

on:
  push:
    branches: [ main, develop, 'feature/*' ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend-test:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:4.4
        ports:
          - 27017:27017
      redis:
        image: redis:6
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
    
    - name: Install Dependencies
      working-directory: backend
      run: npm ci
    
    - name: Run Linter
      working-directory: backend
      run: npm run lint
    
    - name: Run Tests
      working-directory: backend
      run: npm test
      env:
        NODE_ENV: test
        MONGODB_URI: mongodb://localhost:27017/test
        REDIS_HOST: localhost
        JWT_SECRET: test-secret
    
    - name: Upload Coverage
      uses: codecov/codecov-action@v3
      with:
        directory: backend/coverage

  frontend-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install Dependencies
      working-directory: frontend
      run: npm ci
    
    - name: Run Linter
      working-directory: frontend
      run: npm run lint
    
    - name: Run Tests
      working-directory: frontend
      run: npm test
    
    - name: Upload Coverage
      uses: codecov/codecov-action@v3
      with:
        directory: frontend/coverage

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Run Security Scan
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high

  deploy-staging:
    needs: test
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    
    steps:
    - name: 部署到测试环境
      run: echo "部署到测试环境"
      # TODO: 添加实际的部署步骤

  deploy-production:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - name: 部署到生产环境
      run: echo "部署到生产环境"
      # TODO: 添加实际的部署步骤 