[build-system]
requires = ["setuptools>=69.0.3"]
build-backend = "setuptools.build_meta"

[project]
name = "scriptai"
version = "0.1.0"
description = "智能剧本创作平台"
readme = "README.md"
requires-python = ">=3.10"
license = {file = "LICENSE"}
authors = [
    {name = "ScriptAI Team", email = "team@scriptai.com"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[project.urls]
Homepage = "https://github.com/yourusername/scriptai"
Repository = "https://github.com/yourusername/scriptai.git"
Documentation = "https://scriptai.readthedocs.io/"
"Bug Tracker" = "https://github.com/yourusername/scriptai/issues"

[tool.setuptools]
packages = ["src"]

[tool.black]
line-length = 88
target-version = ["py310"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-v -s --cov=src --cov-report=term-missing"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
env_files = ["config/env/.env.test"]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::UserWarning"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[tool.coverage.run]
source = ["src"]
omit = ["tests/*", "setup.py"]
data_file = ".coverage"

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]

[tool.bandit]
exclude_dirs = ["tests", "scripts"]
skips = ["B101"]
config_file = "config/bandit.yaml"

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.1.0"
tag_format = "v$version"
version_files = [
    "pyproject.toml:version",
    "src/__init__.py:__version__",
]

[tool.pylint]
max-line-length = 88
disable = [
    "C0111",  # missing-docstring
    "R0903",  # too-few-public-methods
]
ignore = ["CVS"]
ignore-patterns = ["test_.*?py"]
max-args = 8
rcfile = "config/pylint.rc" 